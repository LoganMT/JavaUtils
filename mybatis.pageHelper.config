1.pom.xml

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>Ming</groupId>
  <artifactId>SpringBoot</artifactId>
  <version>0.0.1-SNAPSHOT</version>

   <!-- Spring Boot 启动父依赖 -->
  <parent>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-parent</artifactId>
      <version>1.5.4.RELEASE</version>
  </parent>

  <properties>
      <java.version>1.8</java.version>
  </properties>

  <dependencies>

       <!-- 分页插件 -->  
       <dependency>  
           <groupId>com.github.pagehelper</groupId>  
           <artifactId>pagehelper</artifactId>  
           <version>4.1.6</version>  
       </dependency>        
   </dependencies>

</project>


2.在application.yml文件

server:
  port: 8089

logging:
  level: 
    learning: debug

spring:
  #数据源配置
  datasource:
    url: jdbc:mysql://localhost:3306/test
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    connectionProperties: druid.stat.mergeSql=true
mybatis:
  #实体类所做包
  type-aliases-package: learning.model
  #mapper.xml所在位置
  mapper-locations: classpath:mappers/*.xml



3.java项目包下新建conf包，MybatisConfig类以配置使用PageHelper分页


@Configuration
public class MybatisConfig {
    @Bean
    public PageHelper pageHelper(){
        PageHelper pageHelper = new PageHelper();  
        //添加配置，也可以指定文件路径
        Properties p = new Properties();
        p.setProperty("offsetAsPageNum", "true");
        p.setProperty("rowBoundsWithCount", "true");
        p.setProperty("reasonable", "true");
        pageHelper.setProperties(p);
        return pageHelper;
    }
}


4.使用pageHelper分页插件

PageHelper.startPage(pageNumber, pageSize);
List<xxxPojo>  xxxList = service.getInfo;
PageInfo<> xxxpageInfo = new PageInfo(xxxList);



